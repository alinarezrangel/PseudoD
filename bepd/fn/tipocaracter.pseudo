[ ******************************************************************************
*****************************************
*********
** Bibliotecas de Funciones de Utilidad: subconjunto de la BEPD.
** Funciones para determinar el tipo de los carácteres.
*********
*****************************************
********************************************************************************
Copyright 2016 Alejandro Linarez Rangel

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
********************************************************************************
****************************************************************************** ]

instancia PseudoFuncion TipoCaracter
fijar TipoCaracter a {}
redireccionar TipoCaracter#cod TipoCaracter

adquirir TipoCaracter#BF

[DOCUMENTA
@brief `TipoCaracter#CaracterNuevaLinea` - El carácter de nueva línea
Es el caracter de nueva línea o `\n`.
DOCUMENTA]
adquirir TipoCaracter#CaracterNuevaLinea
fijar TipoCaracter#CaracterNuevaLinea a {}

[DOCUMENTA
@brief `TipoCaracter#CaracterRetornoDeCarro` - El carácter de retorno de carro
Es el carácter de retorno de carro o `\r`.
DOCUMENTA]
adquirir TipoCaracter#CaracterRetornoDeCarro
fijar TipoCaracter#CaracterRetornoDeCarro a {}

[DOCUMENTA
@brief `TipoCaracter#CaracterEspacioEnBlanco` - El carácter de espacio en blanco
Es el caracter de espacio en blanco o "` `".
DOCUMENTA]
adquirir TipoCaracter#CaracterEspacioEnBlanco
fijar TipoCaracter#CaracterEspacioEnBlanco a {}

[DOCUMENTA
@brief `TipoCaracter#CaracterTabulador` - El carácter tabulador
Es el caracter tabulador o `\t`.
DOCUMENTA]
adquirir TipoCaracter#CaracterTabulador
fijar TipoCaracter#CaracterTabulador a {	}

fijar TipoCaracter#BF a {NL}
Importar.Cad.Caracter_Especial
	TipoCaracter#BF
	TipoCaracter#CaracterNuevaLinea
fijar TipoCaracter#BF a {RC}
Importar.Cad.Caracter_Especial
	TipoCaracter#BF
	TipoCaracter#CaracterRetornoDeCarro
fijar TipoCaracter#BF a {EB}
Importar.Cad.Caracter_Especial
	TipoCaracter#BF
	TipoCaracter#CaracterEspacioEnBlanco

liberar TipoCaracter#BF

[DOCUMENTA
@brief `TipoCaracter#EsTipo` - Determina si el carácter es de un tipo \
específico.

Los tipos válidos son:

* `ES`: Espacio en blanco (separador de palabras)
* `AL`: Alfabético
* `AN`: Alfanumérico
* `BL`: Blanco (el carácter no es visible)
* `CO`: Carácter de Control
* `MA`: Mayúsculas
* `MI`: Minúsculas
* `DI`: Dígito
* `PU`: Puntuación
* `HE`: Dígito Hexadecimal
* `VI`: Visible
* `GR`: Gráfico

Esta función utiliza la biblioteca de localización de PseudoD, véase
<cl/localizacion.pseudo#Localizacion> para más información.

@arg caracter El carácter cuyo tipo de va a determinar.
@arg tipo Algúno de los tipos válidos.

@dev <builtins.pseudo#VERDADERO> si `caracter` es del tipo `tipo`.

@races State.Shared, Fatal.NoThreadSafe

Esta función accede a estados globales compartidos entre C, C++ y PseudoD de
una manera no segura entre hilos. El estado global es compartido entre este
método y todos los demás de la clase <Localizacion>.
DOCUMENTA]
funcion TipoCaracter#EsTipo con caracter y tipo
	Importar.Localizacion.TipoCaracter * caracter tipo

	devolver caracter
finfuncion

[DOCUMENTA
@brief `TipoCaracter#EsEspacioEnBlanco` - Determina si el carácter es un \
espacio en blanco.

Esta función utiliza la biblioteca de localización de PseudoD, véase
<cl/localizacion.pseudo#Localizacion> para más información.

@arg caracter Carácter a determinar.

@dev <builtins.pseudo#VERDADERO> si el carácter es un espacio en blanco en la \
localización actual o <builtins.pseudo#FALSO> en caso contrario.

@races State.Shared, Fatal.NoThreadSafe

Esta función accede a estados globales compartidos entre C, C++ y PseudoD de
una manera no segura entre hilos. El estado global es compartido entre este
método y todos los demás de la clase <Localizacion>.
DOCUMENTA]
funcion TipoCaracter#EsEspacioEnBlanco con caracter
	devolver llamar TipoCaracter#EsTipo caracter {ES} finargs
finfun

[DOCUMENTA
@brief `TipoCaracter#EsFinDeLinea` - Determina si el carácter es un \
final de línea.

@arg caracter Carácter a determinar.

@dev <builtins.pseudo#VERDADERO> si el carácter es un final de línea o \
<builtins.pseudo#FALSO> en caso contrario.

@races None
DOCUMENTA]
funcion TipoCaracter#EsFinDeLinea con caracter
	devolver
		si algun
			son iguales caracter y TipoCaracter#CaracterNuevaLinea
		o son iguales caracter y TipoCaracter#CaracterRetornoDeCarro
finfun

[DOCUMENTA
@brief `TipoCaracter#EsAlfabetico` - Determina si el carácter es un \
carácter alfabético.

Esta función utiliza la biblioteca de localización de PseudoD, véase
<cl/localizacion.pseudo#Localizacion> para más información.

@arg caracter Carácter a determinar.

@dev <builtins.pseudo#VERDADERO> si el carácter es alfabético en la \
localización actual o <builtins.pseudo#FALSO> en caso contrario.

@races State.Shared, Fatal.NoThreadSafe

Esta función accede a estados globales compartidos entre C, C++ y PseudoD de
una manera no segura entre hilos. El estado global es compartido entre este
método y todos los demás de la clase <Localizacion>.
DOCUMENTA]
funcion TipoCaracter#EsAlfabetico con caracter
	devolver llamar TipoCaracter#EsTipo caracter {AL} finargs
finfun

[DOCUMENTA
@brief `TipoCaracter#EsAlfaNumerico` - Determina si el carácter es un \
carácter alfanumérico.

Esta función utiliza la biblioteca de localización de PseudoD, véase
<cl/localizacion.pseudo#Localizacion> para más información.

@arg caracter Carácter a determinar.

@dev <builtins.pseudo#VERDADERO> si el carácter es alfanumérico en la \
localización actual o <builtins.pseudo#FALSO> en caso contrario.

@races State.Shared, Fatal.NoThreadSafe

Esta función accede a estados globales compartidos entre C, C++ y PseudoD de
una manera no segura entre hilos. El estado global es compartido entre este
método y todos los demás de la clase <Localizacion>.
DOCUMENTA]
funcion TipoCaracter#EsAlfaNumerico con caracter
	devolver llamar TipoCaracter#EsTipo caracter {AN} finargs
finfun

[DOCUMENTA
@brief `TipoCaracter#EsDigito` - Determina si el carácter es un dígito.

Esta función utiliza la biblioteca de localización de PseudoD, véase
<cl/localizacion.pseudo#Localizacion> para más información.

@arg caracter Carácter a determinar.

@dev <builtins.pseudo#VERDADERO> si el carácter es un dígito en la \
localización actual o <builtins.pseudo#FALSO> en caso contrario.

@races State.Shared, Fatal.NoThreadSafe

Esta función accede a estados globales compartidos entre C, C++ y PseudoD de
una manera no segura entre hilos. El estado global es compartido entre este
método y todos los demás de la clase <Localizacion>.
DOCUMENTA]
funcion TipoCaracter#EsDigito con caracter
	devolver llamar TipoCaracter#EsTipo caracter {DI} finargs
finfun

[DOCUMENTA
@brief `TipoCaracter#EsDigitoHex` - Determina si el carácter es un dígito \
hexadecimal.

Esta función utiliza la biblioteca de localización de PseudoD, véase
<cl/localizacion.pseudo#Localizacion> para más información.

@arg caracter Carácter a determinar.

@dev <builtins.pseudo#VERDADERO> si el carácter es un dígito hexadecimal en la \
localización actual o <builtins.pseudo#FALSO> en caso contrario.

@races State.Shared, Fatal.NoThreadSafe

Esta función accede a estados globales compartidos entre C, C++ y PseudoD de
una manera no segura entre hilos. El estado global es compartido entre este
método y todos los demás de la clase <Localizacion>.
DOCUMENTA]
funcion TipoCaracter#EsDigitoHex con caracter
	devolver llamar TipoCaracter#EsTipo caracter {HE} finargs
finfun

[DOCUMENTA
@brief `TipoCaracter#EsMayusculas` - Determina si el carácter es un \
carácter en mayúsculas.

Esta función utiliza la biblioteca de localización de PseudoD, véase
<cl/localizacion.pseudo#Localizacion> para más información.

@arg caracter Carácter a determinar.

@dev <builtins.pseudo#VERDADERO> si el carácter esta en mayúsculas en la \
localización actual o <builtins.pseudo#FALSO> en caso contrario.

@races State.Shared, Fatal.NoThreadSafe

Esta función accede a estados globales compartidos entre C, C++ y PseudoD de
una manera no segura entre hilos. El estado global es compartido entre este
método y todos los demás de la clase <Localizacion>.
DOCUMENTA]
funcion TipoCaracter#EsMayusculas con caracter
	devolver llamar TipoCaracter#EsTipo caracter {MA} finargs
finfun

[DOCUMENTA
@brief `TipoCaracter#EsMayusculas` - Determina si el carácter es un \
carácter en minúsculas.

Esta función utiliza la biblioteca de localización de PseudoD, véase
<cl/localizacion.pseudo#Localizacion> para más información.

@arg caracter Carácter a determinar.

@dev <builtins.pseudo#VERDADERO> si el carácter esta en minúsculas en la \
localización actual o <builtins.pseudo#FALSO> en caso contrario.

@races State.Shared, Fatal.NoThreadSafe

Esta función accede a estados globales compartidos entre C, C++ y PseudoD de
una manera no segura entre hilos. El estado global es compartido entre este
método y todos los demás de la clase <Localizacion>.
DOCUMENTA]
funcion TipoCaracter#EsMinusculas con caracter
	devolver llamar TipoCaracter#EsTipo caracter {MI} finargs
finfun

[DOCUMENTA
@brief `TipoCaracter#EnMayusculas` - Convierte el carácter a mayúsculas.

Esta función utiliza la biblioteca de localización de PseudoD, véase
<cl/localizacion.pseudo#Localizacion> para más información.

@arg caracter Carácter a convertir.

@dev Versión en mayúsculas del carácter en la localización actual.

@races State.Shared, Fatal.NoThreadSafe

Esta función accede a estados globales compartidos entre C, C++ y PseudoD de
una manera no segura entre hilos. El estado global es compartido entre este
método y todos los demás de la clase <Localizacion>.
DOCUMENTA]
funcion TipoCaracter#EnMayusculas con caracter
	devolver llamar TipoCaracter#EsTipo caracter {TA} finargs
finfun

[DOCUMENTA
@brief `TipoCaracter#EnMinusculas` - Convierte el carácter a minúsculas.

Esta función utiliza la biblioteca de localización de PseudoD, véase
<cl/localizacion.pseudo#Localizacion> para más información.

@arg caracter Carácter a convertir.

@dev Versión en minúsculas del carácter en la localización actual.

@races State.Shared, Fatal.NoThreadSafe

Esta función accede a estados globales compartidos entre C, C++ y PseudoD de
una manera no segura entre hilos. El estado global es compartido entre este
método y todos los demás de la clase <Localizacion>.
DOCUMENTA]
funcion TipoCaracter#EnMinusculas con caracter
	devolver llamar TipoCaracter#EsTipo caracter {TI} finargs
finfun
