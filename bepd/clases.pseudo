[ ******************************************************************************
*****************************************
*********
** clases.pseudo: Archivo clases estandares de PseudoD de PseudoD
*********
*****************************************
********************************************************************************
Copyright 2016 Alejandro Linarez Rangel

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
********************************************************************************
****************************************************************************** ]

utilizar mate.pseudo

[DOCUMENTA
@file Documentación de clases.pseudo.
Aqui se declaran clases comúnes, como <Fraccion> y <Decimal>.
DOCUMENTA]

[DOCUMENTA
@brief Representa un objeto al cual se le pueden aplicar operaciones aritméticas.

@abstract
DOCUMENTA]
clase ElementoMatematico hereda Objeto
	metodo sumar
	metodo restar
	metodo multiplicar
	metodo dividir
finclase

[DOCUMENTA
@brief Suma dos elementos (res = yo + tu)
@argyo
@arg tu Segundo elemento a aplicar (referencia común).
@arg res Elemento donde se almacenará el resultado (referencia común).
@races None
DOCUMENTA]
funcion ElementoMatematico#sumar
finfun
[DOCUMENTA
@brief Resta dos elementos (res = yo - tu)
@argyo
@arg tu Segundo elemento a aplicar (referencia común).
@arg res Elemento donde se almacenará el resultado (referencia común).
@races None
DOCUMENTA]
funcion ElementoMatematico#restar
finfun
[DOCUMENTA
@brief Multiplica dos elementos (res = yo * tu)
@argyo
@arg tu Segundo elemento a aplicar (referencia común).
@arg res Elemento donde se almacenará el resultado (referencia común).
@races None
DOCUMENTA]
funcion ElementoMatematico#multiplicar
finfun
[DOCUMENTA
@brief Divide dos elementos (res = yo / tu)
@argyo
@arg tu Segundo elemento a aplicar (referencia común).
@arg res Elemento donde se almacenará el resultado (referencia común).
@races None
DOCUMENTA]
funcion ElementoMatematico#dividir
finfun

[DOCUMENTA
@brief Representa un numero en el conjunto `Q`, en forma de fracción.
A diferencia de <Decimal>, este utiliza una representacion en forma de fracción
y no una representacion decimal.
DOCUMENTA]
clase Fraccion hereda ElementoMatematico
	atributo numerador
	atributo denominador
	metodo sumar
	metodo restar
	metodo multiplicar
	metodo dividir
finclase

[ Fraccion#a. Yo#NOMBRE. Tu#NOMBRE. ]

[DOCUMENTA
@brief Suma dos fracciones.
Aplica la forma de `a/b + c/d = (ad + bc)/bd`.
Almacena el resultado en el argumento res.
@argyo
@arg Tu Referencia al segundo elemento de la suma.
@arg res tercer argumento, una referencia común a donde se guardara el resultado.
@races None
DOCUMENTA]
funcion Fraccion#sumar con yo y tu y res
	fijar <res>#numerador a llamar Sumar
		llamar Multiplicar <yo>#numerador <tu>#denominador finargs
		llamar Multiplicar <yo>#denominador <tu>#numerador finargs
	finargs
	fijar <res>#denominador a llamar Multiplicar
		<yo>#denominador <tu>#denominador
	finargs
finfun

[DOCUMENTA
@brief Resta dos fracciones.
Aplica la forma de `a/b - c/d = (ad - bc)/bd`.
Almacena el resultado en el argumento res.
@argyo
@arg Tu Referencia al segundo elemento de la suma.
@arg res tercer argumento, una referencia a donde se guardara el resultado.
@races None
DOCUMENTA]
funcion Fraccion#restar con yo y tu y res
	fijar <res>#numerador a llamar Restar
		llamar Multiplicar <yo>#numerador <tu>#denominador finargs
		llamar Multiplicar <yo>#denominador <tu>#numerador finargs
	finargs
	fijar <res>#denominador a llamar Multiplicar
		<yo>#denominador <tu>#denominador
	finargs
finfun

[DOCUMENTA
@brief Multiplica dos fracciones.
Aplica la forma de `a/b * c/d = ac/bd`.
Almacena el resultado en el argumento res.
@argyo
@arg Tu Referencia al segundo elemento de la suma.
@arg res tercer argumento, una referencia a donde se guardara el resultado.
@races None
DOCUMENTA]
funcion Fraccion#multiplicar con yo y tu y res
	fijar <res>#numerador a llamar Multiplicar
		<yo>#numerador <tu>#numerador
	finargs
	fijar <res>#denominador a llamar Multiplicar
		<yo>#denominador <tu>#denominador
	finargs
finfun

[DOCUMENTA
@brief Divide dos fracciones.
Aplica la forma de `a/b * c/d = ad/bc`.
Almacena el resultado en el argumento res.
@argyo
@arg Tu Referencia al segundo elemento de la suma.
@arg res tercer argumento, una referencia a donde se guardara el resultado.
@races None
DOCUMENTA]
funcion Fraccion#dividir con yo y tu y res
	fijar <res>#numerador a llamar Multiplicar
		<yo>#numerador <tu>#denominador
	finargs
	fijar <res>#denominador a llamar Multiplicar
		<yo>#denominador <tu>#numerador
	finargs
finfun

[DOCUMENTA
@brief Representa un valor de Boole.
Esta clase puede tener dos valores, verdadero y falso.
No hay atributos donde almacenar los valores, se acceden cual si
fueran PseudoVariables.

@obsolete
DOCUMENTA]
clase Boole hereda Objeto
	metodo Y
	metodo O
	metodo NO
	metodo O-EXCLUSIVO
finclase

[DOCUMENTA
@brief Operacion Y entre dos valores de Boole.
Devuelve verdadero si a y b son verdadero.
@arg Yo Referencia comun al valor numero 1 a comparar.
@arg b Referencia comun al valor numero 2 a comparar.
@dev Verdadero o Falso.
@errors Active
DOCUMENTA]
funcion Boole#Y
	adquirir yo
	adquirir tu
	recibir_parametro yo
	recibir_parametro tu
	si <yo>
		si <tu>
			devolver VERDADERO
		sino
			devolver FALSO
		fin
	sino
		devolver FALSO
	fin
	liberar yo
	liberar tu
finfun

[DOCUMENTA
@brief Operacion O entre dos valores de Boole.
Devuelve verdadero si a es verdadero, b es verdadero, o ambos son verdadero.
@arg Yo Referencia al valor numero 1 a comparar.
@arg b Referencia al valor numero 2 a comparar.
@dev Verdadero o Falso.
@errors Active
DOCUMENTA]
funcion Boole#O
	adquirir yo
	adquirir tu
	adquirir res
	recibir_parametro yo
	recibir_parametro tu
	si <yo>
		fijar res a VERDADERO
	fin
	si <tu>
		fijar res a VERDADERO
	fin
	devolver res
	liberar yo
	liberar tu
	liberar res
finfun

[DOCUMENTA
@brief Operacion O-EXCLUSIVO entre dos valores de Boole.
Devuelve verdadero si a y b son distintos.
@arg Yo Referencia al valor numero 1 a comparar.
@arg b Referencia al valor numero 2 a comparar.
@dev Verdadero o Falso.
@errors Active
DOCUMENTA]
funcion Boole#O-EXCLUSIVO
	adquirir yo
	adquirir tu
	recibir_parametro yo
	recibir_parametro tu
	si son diferentes <yo> y <tu>
		devolver VERDADERO
	sino
		devolver FALSO
	fin
	liberar yo
	liberar tu
finfun

[DOCUMENTA
@brief Operacion NO de un valor de Boole.
Devuelve verdadero si a es falso, y falso si a es verdadero.
@arg Yo Referencia al valor a negar.
@dev Verdadero o Falso.
@errors Active
DOCUMENTA]
funcion Boole#NO
	adquirir yo
	recibir_parametro yo
	si <yo>
		devolver FALSO
	sino
		devolver VERDADERO
	fin
	liberar yo
finfun

[DOCUMENTA
@brief Representa un numero en `Z`.
Para un numero en `Q`, se pueden utilizar las clases <Fraccion>
y <Decimal>.

El valor se almacena en el campo valor, como en Decimal.
DOCUMENTA]
clase Numero hereda ElementoMatematico
	atributo valor
	metodo sumar
	metodo restar
	metodo multiplicar
	metodo dividir
finclase

[DOCUMENTA
@brief Suma dos Numeros.
@argyo
@arg b Referencia a el segundo numero a sumar.
@arg res Referencia a donde se almacenara el resultado.
@races None
DOCUMENTA]
funcion Numero#sumar con yo y tu y res
	fijar <res>#valor a llamar Sumar
		<yo>#valor <tu>#valor
	finargs
finfun

[DOCUMENTA
@brief Resta dos Numeros.
@argyo
@arg b Referencia a el segundo numero a restar.
@arg res Referencia a donde se almacenara el resultado.
@races None
DOCUMENTA]
funcion Numero#restar con yo y tu y res
	fijar <res>#valor a llamar Restar
		<yo>#valor <tu>#valor
	finargs
finfun

[DOCUMENTA
@brief Multiplica dos Numeros.
@argyo
@arg b Referencia a el segundo numero a multiplicar.
@arg res Referencia a donde se almacenara el resultado.
@races None
DOCUMENTA]
funcion Numero#multiplicar con yo y tu y res
	fijar <res>#valor a llamar Multiplicar
		<yo>#valor <tu>#valor
	finargs
finfun

[DOCUMENTA
@brief Divide dos Numeros.
@argyo
@arg b Referencia a el segundo numero a dividir.
@arg res Referencia a donde se almacenara el resultado.
@races None
DOCUMENTA]
funcion Numero#dividir con yo y tu y res
	fijar <res>#valor a llamar Dividir
		<yo>#valor <tu>#valor
	finargs
finfun

[DOCUMENTA
@brief Representa un numero en `Q`.
Para numeros en `Z`, u otra representacion de numeros en `Q`, se pueden ver:

 * <Numero> para representaciones en `Z`.
 * <Fraccion> para representaciones en `Q`.
DOCUMENTA]
clase Decimal hereda ElementoMatematico
	atributo valor
	metodo sumar
	metodo restar
	metodo multiplicar
	metodo dividir
finclase

[DOCUMENTA
@brief Suma dos Numeros Decimales.
@argyo
@arg b Referencia a el segundo numero a sumar.
@arg res Referencia a donde se almacenara el resultado.
@races None
DOCUMENTA]
funcion Decimal#sumar con yo y tu y res
	fijar <res>#valor a llamar Sumar
		<yo>#valor <tu>#valor
	finargs
finfun

[DOCUMENTA
@brief Resta dos Numeros Decimales.
@argyo
@arg b Referencia a el segundo numero a restar.
@arg res Referencia a donde se almacenara el resultado.
@races None
DOCUMENTA]
funcion Decimal#restar con yo y tu y res
	fijar <res>#valor a llamar Restar
		<yo>#valor <tu>#valor
	finargs
finfun

[DOCUMENTA
@brief Multiplica dos Numeros Decimales.
@argyo
@arg b Referencia a el segundo numero a multiplicar.
@arg res Referencia a donde se almacenara el resultado.
@races None
DOCUMENTA]
funcion Decimal#multiplicar con yo y tu y res
	fijar <res>#valor a llamar Multiplicar
		<yo>#valor <tu>#valor
	finargs
finfun

[DOCUMENTA
@brief Divide dos Numeros decimales.
@argyo
@arg b Referencia a el segundo numero a dividir.
@arg res Referencia a donde se almacenara el resultado.
@races None
DOCUMENTA]
funcion Decimal#dividir con yo y tu y res
	fijar <res>#valor a llamar Dividir
		<yo>#valor <tu>#valor
	finargs
finfun

[DOCUMENTA
@brief Representa un par de valores.
Posee un primero (primer valor o clave) y un segundo (segundo valor o valor).
DOCUMENTA]
clase Par hereda Objeto
	atributo primero
	atributo segundo
finclase
