[ ******************************************************************************
*****************************************
*********
** tipos.pseudo: Algoritmos de utilidad.
*********
*****************************************
********************************************************************************
Copyright 2016 Alejandro Linarez Rangel

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
********************************************************************************
****************************************************************************** ]

utilizar cadena.pseudo
utilizar entsal.pseudo

utilizar rt/posee.pseudo

utilizar fn/asertar.pseudo
utilizar fn/atributosdinamicos.pseudo

[DOCUMENTA
@file Documentación de tipos.pseudo.
Aqui se encuentran funciones comunes de PseudoD.

Este archivo contiene además la biblioteca de rasgos de tipo, la cual
detecta caracteristicas de objetos y tipos (clases) para su uso en
ducktyping y metaprogramación.
DOCUMENTA]

[DOCUMENTA
@brief Representa una referencia a un objeto.
Este requiere que se campo ref sea fijado a el nombre (ref) de la
variable a fijar. Esta variable puede ser una instancia de cualquier clase.

@obsolete
DOCUMENTA]
clase Referencia hereda Objeto
	atributo ref
	metodo obtenerAttrStr
	metodo obtenerAttr
	metodo fijarAttr
	metodo redireccionarAttr
	metodo llamarMet
	metodo obtenerValor
finclase

[DOCUMENTA
@brief Devuelve en forma de cadena, el atributo de la referencia.
Por ejemplo: si la referencia es A y el atributo es B devuelve A#B
@argyo
@arg attr Atributo a devolver.
@dev El atributo en forma de cadena.
@races None
DOCUMENTA]
funcion Referencia#obtenerAttrStr [ ref instancia, attr ]
	adquirir __REFERENCIA_OBT_ATTR_STR_REF__
	adquirir __REFERENCIA_OBT_ATTR_STR_BUFF__
	adquirir __REFERENCIA_OBT_ATTR_STR_BUFF2__
	adquirir __REFERENCIA_OBT_ATTR_STR_ATTR__
	recibir_parametro __REFERENCIA_OBT_ATTR_STR_REF__
	recibir_parametro __REFERENCIA_OBT_ATTR_STR_ATTR__
	fijar __REFERENCIA_OBT_ATTR_STR_BUFF2__ =* #
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF2__ __REFERENCIA_OBT_ATTR_STR_ATTR__ __REFERENCIA_OBT_ATTR_STR_BUFF2__
	fijar __REFERENCIA_OBT_ATTR_STR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_REF__ __REFERENCIA_OBT_ATTR_STR_BUFF__ __REFERENCIA_OBT_ATTR_STR_REF__
	fijar __REFERENCIA_OBT_ATTR_STR_BUFF__ =* Importar.Cad.Concatenar
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF__ __REFERENCIA_OBT_ATTR_STR_REF__ __REFERENCIA_OBT_ATTR_STR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF__ ESP __REFERENCIA_OBT_ATTR_STR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF__ __REFERENCIA_OBT_ATTR_STR_BUFF2__#NOMBRE __REFERENCIA_OBT_ATTR_STR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF__ ESP __REFERENCIA_OBT_ATTR_STR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF__ __REFERENCIA_OBT_ATTR_STR_BUFF__#NOMBRE __REFERENCIA_OBT_ATTR_STR_BUFF__
	ejecutar __REFERENCIA_OBT_ATTR_STR_BUFF__
	devolver __REFERENCIA_OBT_ATTR_STR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_STR_ATTR__
	liberar __REFERENCIA_OBT_ATTR_STR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_STR_BUFF2__
	liberar __REFERENCIA_OBT_ATTR_STR_REF__
finfun

[DOCUMENTA
@brief Devuelve el valor del atributo.
A diferencia de <Referencia\#obtenerAttrStr>, este devuelve el valor
del atributo, por ejemplo: dada la referencia A y el atributo B devuelve el valor
de `A#B` y no la cadena `A#B`.
@argyo
@arg attr Atributo a acceder.
@dev El valor del atributo.
@races Fatal.NonAttr
Si el atributo no existe, lanzara un error fatal.
DOCUMENTA]
funcion Referencia#obtenerAttr [ ref instancia, attr ]
	adquirir __REFERENCIA_OBT_ATTR_ATTR__
	adquirir __REFERENCIA_OBT_ATTR_BUFF__
	adquirir __REFERENCIA_OBT_ATTR_REF__
	adquirir __REFERENCIA_OBT_ATTR_BUFF2__
	recibir_parametro __REFERENCIA_OBT_ATTR_REF__
	recibir_parametro __REFERENCIA_OBT_ATTR_ATTR__
	fijar __REFERENCIA_OBT_ATTR_BUFF2__ =* #
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF2__ __REFERENCIA_OBT_ATTR_ATTR__ __REFERENCIA_OBT_ATTR_BUFF2__
	fijar __REFERENCIA_OBT_ATTR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_REF__ __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_REF__
	fijar __REFERENCIA_OBT_ATTR_BUFF__ =* Importar.Cad.Concatenar
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_REF__ __REFERENCIA_OBT_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ ESP __REFERENCIA_OBT_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_BUFF2__#NOMBRE __REFERENCIA_OBT_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ ESP __REFERENCIA_OBT_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_BUFF__#NOMBRE __REFERENCIA_OBT_ATTR_BUFF__
	ejecutar __REFERENCIA_OBT_ATTR_BUFF__
	fijar __REFERENCIA_OBT_ATTR_BUFF2__ =* devolver
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF2__ __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_BUFF__
	ejecutar __REFERENCIA_OBT_ATTR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_ATTR__
	liberar __REFERENCIA_OBT_ATTR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_REF__
	liberar __REFERENCIA_OBT_ATTR_BUFF2__
finfun

[DOCUMENTA
@brief Devuelve el valor del atributo.
Devuelve su valor bruto.
@argyo
@dev El valor del atributo.
@races None
DOCUMENTA]
funcion Referencia#obtenerValor [ ref instancia ]
	adquirir __REFERENCIA_OBT_ATTR_ATTR__
	adquirir __REFERENCIA_OBT_ATTR_BUFF__
	adquirir __REFERENCIA_OBT_ATTR_REF__
	adquirir __REFERENCIA_OBT_ATTR_BUFF2__
	recibir_parametro __REFERENCIA_OBT_ATTR_REF__
	fijar __REFERENCIA_OBT_ATTR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_REF__ __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_REF__
	fijar __REFERENCIA_OBT_ATTR_BUFF__ =* empujar
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_REF__ __REFERENCIA_OBT_ATTR_BUFF__
	ejecutar __REFERENCIA_OBT_ATTR_BUFF__
	sacar __REFERENCIA_OBT_ATTR_BUFF2__
	fijar __REFERENCIA_OBT_ATTR_BUFF__ =* empujar
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_BUFF2__ __REFERENCIA_OBT_ATTR_BUFF__
	ejecutar __REFERENCIA_OBT_ATTR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_ATTR__
	liberar __REFERENCIA_OBT_ATTR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_REF__
	liberar __REFERENCIA_OBT_ATTR_BUFF2__
finfun

[DOCUMENTA
@brief Fija el valor del atributo.
En este proceso destruye el valor anterior.
@argyo
@arg attr Atributo a fijar.
@arg val Nuevo valor para el atributo.
@races Fatal.NonAttr
Si el atributo no existe, lanzara un error fatal.
DOCUMENTA]
funcion Referencia#fijarAttr [ ref instancia, attr, val ]
	adquirir __REFERENCIA_FJR_ATTR_ATTR__
	adquirir __REFERENCIA_FJR_ATTR_BUFF__
	adquirir __REFERENCIA_FJR_ATTR_REF__
	adquirir __REFERENCIA_FJR_ATTR_BUFF2__
	recibir_parametro __REFERENCIA_FJR_ATTR_REF__
	recibir_parametro __REFERENCIA_FJR_ATTR_ATTR__
	fijar __REFERENCIA_FJR_ATTR_BUFF2__ =* #
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF2__ __REFERENCIA_FJR_ATTR_ATTR__ __REFERENCIA_FJR_ATTR_BUFF2__
	fijar __REFERENCIA_FJR_ATTR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_REF__ __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_REF__
	fijar __REFERENCIA_FJR_ATTR_BUFF__ =* Importar.Cad.Concatenar
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_REF__ __REFERENCIA_FJR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ ESP __REFERENCIA_FJR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_BUFF2__#NOMBRE __REFERENCIA_FJR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ ESP __REFERENCIA_FJR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_BUFF__#NOMBRE __REFERENCIA_FJR_ATTR_BUFF__
	ejecutar __REFERENCIA_FJR_ATTR_BUFF__
	fijar __REFERENCIA_FJR_ATTR_BUFF2__ =* fijar
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF2__ __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ ESP __REFERENCIA_FJR_ATTR_BUFF__
	fijar __REFERENCIA_FJR_ATTR_BUFF2__ =* =¿?
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_BUFF2__ __REFERENCIA_FJR_ATTR_BUFF__
	recibir_parametro __REFERENCIA_FJR_ATTR_BUFF2__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_BUFF2__#NOMBRE __REFERENCIA_FJR_ATTR_BUFF__
	ejecutar __REFERENCIA_FJR_ATTR_BUFF__
	liberar __REFERENCIA_FJR_ATTR_ATTR__
	liberar __REFERENCIA_FJR_ATTR_BUFF__
	liberar __REFERENCIA_FJR_ATTR_REF__
	liberar __REFERENCIA_FJR_ATTR_BUFF2__
finfun

[DOCUMENTA
@brief Redirecciona el valor del atributo puntero.
Solo funciona si el atributo pasado es un puntero. Lo redirecciona a una
nueva variable.
@argyo
@arg attr Atributo puntero a redireccionar.
@arg var Variable a redireccionar el puntero(referencia comun).
@races Fatal.NonAttr
Si el atributo no existe, lanzara un error fatal.
DOCUMENTA]
funcion Referencia#redireccionarAttr [ ref instancia, attr, val ]
	adquirir __REFERENCIA_RED_ATTR_ATTR__
	adquirir __REFERENCIA_RED_ATTR_BUFF__
	adquirir __REFERENCIA_RED_ATTR_REF__
	adquirir __REFERENCIA_RED_ATTR_BUFF2__
	recibir_parametro __REFERENCIA_RED_ATTR_REF__
	recibir_parametro __REFERENCIA_RED_ATTR_ATTR__
	fijar __REFERENCIA_RED_ATTR_BUFF2__ =* #
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF2__ __REFERENCIA_RED_ATTR_ATTR__ __REFERENCIA_RED_ATTR_BUFF2__
	fijar __REFERENCIA_RED_ATTR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_REF__ __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_REF__
	fijar __REFERENCIA_RED_ATTR_BUFF__ =* Importar.Cad.Concatenar
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_REF__ __REFERENCIA_RED_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ ESP __REFERENCIA_RED_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_BUFF2__#NOMBRE __REFERENCIA_RED_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ ESP __REFERENCIA_RED_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_BUFF__#NOMBRE __REFERENCIA_RED_ATTR_BUFF__
	ejecutar __REFERENCIA_RED_ATTR_BUFF__
	fijar __REFERENCIA_RED_ATTR_BUFF2__ =* redireccionar
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF2__ __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ ESP __REFERENCIA_RED_ATTR_BUFF__
	recibir_parametro __REFERENCIA_RED_ATTR_BUFF2__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_BUFF2__ __REFERENCIA_RED_ATTR_BUFF__
	ejecutar __REFERENCIA_RED_ATTR_BUFF__
	liberar __REFERENCIA_RED_ATTR_ATTR__
	liberar __REFERENCIA_RED_ATTR_BUFF__
	liberar __REFERENCIA_RED_ATTR_REF__
	liberar __REFERENCIA_RED_ATTR_BUFF2__
finfun

[DOCUMENTA
@brief Llama al metodo de la referencia.
@argyo
@arg met Metodo a llamar
@arg args Argumentos a pasar.
@dev El resultado de la funcion.
@races Fatal.NonAttr
Si el método no existe, lanzara un error fatal.
DOCUMENTA]
funcion Referencia#llamarMet [ ref instancia, met, args... ]
	adquirir __REFERENCIA_LMR_ATTR_ATTR__
	adquirir __REFERENCIA_LMR_ATTR_BUFF__
	adquirir __REFERENCIA_LMR_ATTR_REF__
	adquirir __REFERENCIA_LMR_ATTR_BUFF2__
	recibir_parametro __REFERENCIA_LMR_ATTR_REF__
	recibir_parametro __REFERENCIA_LMR_ATTR_ATTR__
	fijar __REFERENCIA_LMR_ATTR_BUFF2__ =* #
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF2__ __REFERENCIA_LMR_ATTR_ATTR__ __REFERENCIA_LMR_ATTR_BUFF2__
	fijar __REFERENCIA_LMR_ATTR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_REF__ __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_REF__
	fijar __REFERENCIA_LMR_ATTR_BUFF__ =* Importar.Cad.Concatenar
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_REF__ __REFERENCIA_LMR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ ESP __REFERENCIA_LMR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_BUFF2__#NOMBRE __REFERENCIA_LMR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ ESP __REFERENCIA_LMR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_BUFF__#NOMBRE __REFERENCIA_LMR_ATTR_BUFF__
	ejecutar __REFERENCIA_LMR_ATTR_BUFF__
	fijar __REFERENCIA_LMR_ATTR_BUFF2__ =* llamar
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF2__ __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_BUFF__
	fijar __REFERENCIA_LMR_ATTR_BUFF2__ =* #(Final).
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ ESP __REFERENCIA_LMR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_BUFF2__ __REFERENCIA_LMR_ATTR_BUFF__
	ejecutar __REFERENCIA_LMR_ATTR_BUFF__
	liberar __REFERENCIA_LMR_ATTR_ATTR__
	liberar __REFERENCIA_LMR_ATTR_BUFF__
	liberar __REFERENCIA_LMR_ATTR_REF__
	liberar __REFERENCIA_LMR_ATTR_BUFF2__
finfun
