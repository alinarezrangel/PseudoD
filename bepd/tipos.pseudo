[ ******************************************************************************
*****************************************
*********
** tipos.pseudo: Algoritmos de utilidad.
** PseudoD fue creado por Alejandro Linarez Rangel
** tipos.pseudo fue creado por Alejandro Linarez Rangel
** Puede copiar, redistribuir y modificar este archivo con permiso de
** <proyectopseudod@gmail.com>.
*****************************************
****************************************************************************** ]

[DOCUMENTA
@file Documentación de tipos.pseudo.
Aqui se encuentran funciones comunes de PseudoD, la clase <Referencia>, es
la clase principal de este archivo, permitiendo referenciar variables de
forma eficiente y simple.
DOCUMENTA]

[DOCUMENTA
@brief Representa una referencia a un objeto.
Este requiere que se campo ref sea fijado a el nombre (ref) de la
variable a fijar. Esta variable puede ser una instancia de cualquier clase.

@obsolete
DOCUMENTA]
clase Referencia hereda Objeto
	ref
	:obtenerAttrStr
	:obtenerAttr
	:fijarAttr
	:redireccionarAttr
	:llamarMet
	:obtenerValor
finclase

[DOCUMENTA
@brief Devuelve en forma de cadena, el atributo de la referencia.
Por ejemplo: si la referencia es A y el atributo es B devuelve A#B
@argyo
@arg attr Atributo a devolver.
@dev El atributo en forma de cadena.
@races None
DOCUMENTA]
funcion Referencia#obtenerAttrStr [ ref instancia, attr ]
	adquirir __REFERENCIA_OBT_ATTR_STR_REF__
	adquirir __REFERENCIA_OBT_ATTR_STR_BUFF__
	adquirir __REFERENCIA_OBT_ATTR_STR_BUFF2__
	adquirir __REFERENCIA_OBT_ATTR_STR_ATTR__
	recibir_parametro __REFERENCIA_OBT_ATTR_STR_REF__
	recibir_parametro __REFERENCIA_OBT_ATTR_STR_ATTR__
	fijar __REFERENCIA_OBT_ATTR_STR_BUFF2__ =* #
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF2__ __REFERENCIA_OBT_ATTR_STR_ATTR__ __REFERENCIA_OBT_ATTR_STR_BUFF2__
	fijar __REFERENCIA_OBT_ATTR_STR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_REF__ __REFERENCIA_OBT_ATTR_STR_BUFF__ __REFERENCIA_OBT_ATTR_STR_REF__
	fijar __REFERENCIA_OBT_ATTR_STR_BUFF__ =* Importar.Cad.Concatenar
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF__ __REFERENCIA_OBT_ATTR_STR_REF__ __REFERENCIA_OBT_ATTR_STR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF__ ESP __REFERENCIA_OBT_ATTR_STR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF__ __REFERENCIA_OBT_ATTR_STR_BUFF2__#NOMBRE __REFERENCIA_OBT_ATTR_STR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF__ ESP __REFERENCIA_OBT_ATTR_STR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_STR_BUFF__ __REFERENCIA_OBT_ATTR_STR_BUFF__#NOMBRE __REFERENCIA_OBT_ATTR_STR_BUFF__
	ejecutar __REFERENCIA_OBT_ATTR_STR_BUFF__
	devolver __REFERENCIA_OBT_ATTR_STR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_STR_ATTR__
	liberar __REFERENCIA_OBT_ATTR_STR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_STR_BUFF2__
	liberar __REFERENCIA_OBT_ATTR_STR_REF__
finfun

[DOCUMENTA
@brief Devuelve el valor del atributo.
A diferencia de <Referencia\#obtenerAttrStr>, este devuelve el valor
del atributo, por ejemplo: dada la referencia A y el atributo B devuelve el valor
de `A#B` y no la cadena `A#B`.
@argyo
@arg attr Atributo a acceder.
@dev El valor del atributo.
@races Fatal.NonAttr
Si el atributo no existe, lanzara un error fatal.
DOCUMENTA]
funcion Referencia#obtenerAttr [ ref instancia, attr ]
	adquirir __REFERENCIA_OBT_ATTR_ATTR__
	adquirir __REFERENCIA_OBT_ATTR_BUFF__
	adquirir __REFERENCIA_OBT_ATTR_REF__
	adquirir __REFERENCIA_OBT_ATTR_BUFF2__
	recibir_parametro __REFERENCIA_OBT_ATTR_REF__
	recibir_parametro __REFERENCIA_OBT_ATTR_ATTR__
	fijar __REFERENCIA_OBT_ATTR_BUFF2__ =* #
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF2__ __REFERENCIA_OBT_ATTR_ATTR__ __REFERENCIA_OBT_ATTR_BUFF2__
	fijar __REFERENCIA_OBT_ATTR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_REF__ __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_REF__
	fijar __REFERENCIA_OBT_ATTR_BUFF__ =* Importar.Cad.Concatenar
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_REF__ __REFERENCIA_OBT_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ ESP __REFERENCIA_OBT_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_BUFF2__#NOMBRE __REFERENCIA_OBT_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ ESP __REFERENCIA_OBT_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_BUFF__#NOMBRE __REFERENCIA_OBT_ATTR_BUFF__
	ejecutar __REFERENCIA_OBT_ATTR_BUFF__
	fijar __REFERENCIA_OBT_ATTR_BUFF2__ =* devolver
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF2__ __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_BUFF__
	ejecutar __REFERENCIA_OBT_ATTR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_ATTR__
	liberar __REFERENCIA_OBT_ATTR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_REF__
	liberar __REFERENCIA_OBT_ATTR_BUFF2__
finfun

[DOCUMENTA
@brief Devuelve el valor del atributo.
Devuelve su valor bruto.
@argyo
@dev El valor del atributo.
@races None
DOCUMENTA]
funcion Referencia#obtenerValor [ ref instancia ]
	adquirir __REFERENCIA_OBT_ATTR_ATTR__
	adquirir __REFERENCIA_OBT_ATTR_BUFF__
	adquirir __REFERENCIA_OBT_ATTR_REF__
	adquirir __REFERENCIA_OBT_ATTR_BUFF2__
	recibir_parametro __REFERENCIA_OBT_ATTR_REF__
	fijar __REFERENCIA_OBT_ATTR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_REF__ __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_REF__
	fijar __REFERENCIA_OBT_ATTR_BUFF__ =* empujar
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_REF__ __REFERENCIA_OBT_ATTR_BUFF__
	ejecutar __REFERENCIA_OBT_ATTR_BUFF__
	sacar __REFERENCIA_OBT_ATTR_BUFF2__
	fijar __REFERENCIA_OBT_ATTR_BUFF__ =* empujar
	Importar.Cad.Concatenar __REFERENCIA_OBT_ATTR_BUFF__ __REFERENCIA_OBT_ATTR_BUFF2__ __REFERENCIA_OBT_ATTR_BUFF__
	ejecutar __REFERENCIA_OBT_ATTR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_ATTR__
	liberar __REFERENCIA_OBT_ATTR_BUFF__
	liberar __REFERENCIA_OBT_ATTR_REF__
	liberar __REFERENCIA_OBT_ATTR_BUFF2__
finfun

[DOCUMENTA
@brief Fija el valor del atributo.
En este proceso destruye el valor anterior.
@argyo
@arg attr Atributo a fijar.
@arg val Nuevo valor para el atributo.
@races Fatal.NonAttr
Si el atributo no existe, lanzara un error fatal.
DOCUMENTA]
funcion Referencia#fijarAttr [ ref instancia, attr, val ]
	adquirir __REFERENCIA_FJR_ATTR_ATTR__
	adquirir __REFERENCIA_FJR_ATTR_BUFF__
	adquirir __REFERENCIA_FJR_ATTR_REF__
	adquirir __REFERENCIA_FJR_ATTR_BUFF2__
	recibir_parametro __REFERENCIA_FJR_ATTR_REF__
	recibir_parametro __REFERENCIA_FJR_ATTR_ATTR__
	fijar __REFERENCIA_FJR_ATTR_BUFF2__ =* #
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF2__ __REFERENCIA_FJR_ATTR_ATTR__ __REFERENCIA_FJR_ATTR_BUFF2__
	fijar __REFERENCIA_FJR_ATTR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_REF__ __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_REF__
	fijar __REFERENCIA_FJR_ATTR_BUFF__ =* Importar.Cad.Concatenar
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_REF__ __REFERENCIA_FJR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ ESP __REFERENCIA_FJR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_BUFF2__#NOMBRE __REFERENCIA_FJR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ ESP __REFERENCIA_FJR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_BUFF__#NOMBRE __REFERENCIA_FJR_ATTR_BUFF__
	ejecutar __REFERENCIA_FJR_ATTR_BUFF__
	fijar __REFERENCIA_FJR_ATTR_BUFF2__ =* fijar
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF2__ __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ ESP __REFERENCIA_FJR_ATTR_BUFF__
	fijar __REFERENCIA_FJR_ATTR_BUFF2__ =* =¿?
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_BUFF2__ __REFERENCIA_FJR_ATTR_BUFF__
	recibir_parametro __REFERENCIA_FJR_ATTR_BUFF2__
	Importar.Cad.Concatenar __REFERENCIA_FJR_ATTR_BUFF__ __REFERENCIA_FJR_ATTR_BUFF2__#NOMBRE __REFERENCIA_FJR_ATTR_BUFF__
	ejecutar __REFERENCIA_FJR_ATTR_BUFF__
	liberar __REFERENCIA_FJR_ATTR_ATTR__
	liberar __REFERENCIA_FJR_ATTR_BUFF__
	liberar __REFERENCIA_FJR_ATTR_REF__
	liberar __REFERENCIA_FJR_ATTR_BUFF2__
finfun

[DOCUMENTA
@brief Redirecciona el valor del atributo puntero.
Solo funciona si el atributo pasado es un puntero. Lo redirecciona a una
nueva variable.
@argyo
@arg attr Atributo puntero a redireccionar.
@arg var Variable a redireccionar el puntero(referencia comun).
@races Fatal.NonAttr
Si el atributo no existe, lanzara un error fatal.
DOCUMENTA]
funcion Referencia#redireccionarAttr [ ref instancia, attr, val ]
	adquirir __REFERENCIA_RED_ATTR_ATTR__
	adquirir __REFERENCIA_RED_ATTR_BUFF__
	adquirir __REFERENCIA_RED_ATTR_REF__
	adquirir __REFERENCIA_RED_ATTR_BUFF2__
	recibir_parametro __REFERENCIA_RED_ATTR_REF__
	recibir_parametro __REFERENCIA_RED_ATTR_ATTR__
	fijar __REFERENCIA_RED_ATTR_BUFF2__ =* #
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF2__ __REFERENCIA_RED_ATTR_ATTR__ __REFERENCIA_RED_ATTR_BUFF2__
	fijar __REFERENCIA_RED_ATTR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_REF__ __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_REF__
	fijar __REFERENCIA_RED_ATTR_BUFF__ =* Importar.Cad.Concatenar
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_REF__ __REFERENCIA_RED_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ ESP __REFERENCIA_RED_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_BUFF2__#NOMBRE __REFERENCIA_RED_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ ESP __REFERENCIA_RED_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_BUFF__#NOMBRE __REFERENCIA_RED_ATTR_BUFF__
	ejecutar __REFERENCIA_RED_ATTR_BUFF__
	fijar __REFERENCIA_RED_ATTR_BUFF2__ =* redireccionar
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF2__ __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ ESP __REFERENCIA_RED_ATTR_BUFF__
	recibir_parametro __REFERENCIA_RED_ATTR_BUFF2__
	Importar.Cad.Concatenar __REFERENCIA_RED_ATTR_BUFF__ __REFERENCIA_RED_ATTR_BUFF2__ __REFERENCIA_RED_ATTR_BUFF__
	ejecutar __REFERENCIA_RED_ATTR_BUFF__
	liberar __REFERENCIA_RED_ATTR_ATTR__
	liberar __REFERENCIA_RED_ATTR_BUFF__
	liberar __REFERENCIA_RED_ATTR_REF__
	liberar __REFERENCIA_RED_ATTR_BUFF2__
finfun

[DOCUMENTA
@brief Llama al metodo de la referencia.
@argyo
@arg met Metodo a llamar
@arg args Argumentos a pasar.
@dev El resultado de la funcion.
@races Fatal.NonAttr
Si el método no existe, lanzara un error fatal.
DOCUMENTA]
funcion Referencia#llamarMet [ ref instancia, met, args... ]
	adquirir __REFERENCIA_LMR_ATTR_ATTR__
	adquirir __REFERENCIA_LMR_ATTR_BUFF__
	adquirir __REFERENCIA_LMR_ATTR_REF__
	adquirir __REFERENCIA_LMR_ATTR_BUFF2__
	recibir_parametro __REFERENCIA_LMR_ATTR_REF__
	recibir_parametro __REFERENCIA_LMR_ATTR_ATTR__
	fijar __REFERENCIA_LMR_ATTR_BUFF2__ =* #
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF2__ __REFERENCIA_LMR_ATTR_ATTR__ __REFERENCIA_LMR_ATTR_BUFF2__
	fijar __REFERENCIA_LMR_ATTR_BUFF__ =* #ref
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_REF__ __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_REF__
	fijar __REFERENCIA_LMR_ATTR_BUFF__ =* Importar.Cad.Concatenar
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_REF__ __REFERENCIA_LMR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ ESP __REFERENCIA_LMR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_BUFF2__#NOMBRE __REFERENCIA_LMR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ ESP __REFERENCIA_LMR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_BUFF__#NOMBRE __REFERENCIA_LMR_ATTR_BUFF__
	ejecutar __REFERENCIA_LMR_ATTR_BUFF__
	fijar __REFERENCIA_LMR_ATTR_BUFF2__ =* llamar
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF2__ __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_BUFF__
	fijar __REFERENCIA_LMR_ATTR_BUFF2__ =* #(Final).
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ ESP __REFERENCIA_LMR_ATTR_BUFF__
	Importar.Cad.Concatenar __REFERENCIA_LMR_ATTR_BUFF__ __REFERENCIA_LMR_ATTR_BUFF2__ __REFERENCIA_LMR_ATTR_BUFF__
	ejecutar __REFERENCIA_LMR_ATTR_BUFF__
	liberar __REFERENCIA_LMR_ATTR_ATTR__
	liberar __REFERENCIA_LMR_ATTR_BUFF__
	liberar __REFERENCIA_LMR_ATTR_REF__
	liberar __REFERENCIA_LMR_ATTR_BUFF2__
finfun

[DOCUMENTA
@brief Crea un atributo dinamico.
Equivalente a escribir `instancia tattr yo#nattr`.
@arg yo Nombre de la instancia sobre la que se creara el atributo.
@arg nattr Nombre del atributo a crear.
@arg tattr Tipo de latributo a crear.
@races Fatal.HaveAttr
Si el atributo ya existe, lanzara un error fatal.
DOCUMENTA]
funcion CrearAtributoDinamico [ yo, nattr, tattr ]
	[ instancia tattr yo#nattr ]
	adquirir yo
	adquirir nombre_atributo
	adquirir tipo_atributo
	adquirir codigo
	recibir_parametro yo
	recibir_parametro nombre_atributo
	recibir_parametro tipo_atributo
	instancia <tipo_atributo> <yo>#<nombre_atributo>
	liberar yo
	liberar nombre_atributo
	liberar tipo_atributo
finfun

[DOCUMENTA
@brief Destruye un atributo dinamico.
Este puede ser creado con <CrearAtributoDinamico>.
@arg yo Instancia sobre la que existe el atributo.
@arg nattr Nombre del atributo.
@races Fatal.NonAttr
De ya estar destruido el atributo, lanzara un error fatal.
DOCUMENTA]
funcion DestruirAtributoDinamico [ yo, nattr ]
	[ instancia tattr yo#nattr ]
	adquirir yo
	adquirir nombre_atributo
	recibir_parametro yo
	recibir_parametro nombre_atributo
	liberar <yo>#<nombre_atributo>
	liberar yo
	liberar nombre_atributo
finfun
