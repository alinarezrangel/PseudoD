[ ******************************************************************************
*****************************************
*********
** algor.pseudo: Algoritmos de utilidad.
** PseudoD fue creado por Alejandro Linarez Rangel
** algor.pseudo fue creado por Alejandro Linarez Rangel
** Puede copiar, redistribuir y modificar este archivo con permiso de
** <proyectopseudod@gmail.com>.
*****************************************
****************************************************************************** ]

utilizar tipos.pseudo
utilizar mate.pseudo
utilizar cadena.pseudo

[DOCUMENTA
@file Documentación de algor.pseudo.
Este archivo posee clases dinamicas, que representan objetos comunes, como
listas, arrays, funciones tipo foreach, arboles binarios, etc.
DOCUMENTA]

[DOCUMENTA
@brief Es un arreglo dinámico de elementos.
A diferencia de un arreglo común, aqui los elementos no están en
posiciones sucesivas de memoria.
DOCUMENTA]
clase Arreglo
	tamaño
	:crear
	:destruir
	:obtener
	:agregar
finclase
heredar Objeto Arreglo

[DOCUMENTA
@brief Crea el arreglo.
El arreglo inicial tiene un tamaño 0 y esta vacio.
@argyo
@errors Active
DOCUMENTA]
funcion Arreglo#crear [ ref yo ]
	adquirir yo
	recibir_parametro yo
	fijar <yo>#tamaño a {0}
	liberar yo
finfun

[DOCUMENTA
@brief Libera la memoria ocupada por el arreglo.
Adicionalmente, si se necesita destruir por completo el arreglo,
debes invocar a liberar.
@argyo
@errors Active
DOCUMENTA]
funcion Arreglo#destruir [ ref yo ]
	adquirir yo
	adquirir i
	recibir_parametro yo
	fijar i a {0}
	mientras comparar Importar.Ent.Comparar i < <yo>#tamaño
		llamar DestruirAtributoDinamico yo
			llamar Cadena#Concatenar {en} i finargs
		finargs
	finbucle
	liberar yo
	liberar i
finfun

[DOCUMENTA
@brief Obtiene un elemento en una determinada posición.
Si la posición es invalida, devuelve NULO.
@argyo
@arg i Índice del elemento, entre 0 y tamaño.
@dev Referencia al elemento.
@errors Active
DOCUMENTA]
funcion Arreglo#obtener [ ref yo, i -> ref at ]
	adquirir yo
	adquirir i
	recibir_parametro yo
	recibir_parametro i
	si comparar Importar.Ent.Comparar i >= <yo>#tamaño
		devolver NULO
	sino
		devolver <yo>#en<i>
	fin
	liberar i
	liberar yo
finfun

[DOCUMENTA
@brief Agrega un elemento al final.
También incrementa el tamaño del arreglo.
@argyo
@arg tipo Tipo del dato a agregar.
@dev Índice del nuevo elemento.
@errors Active
DOCUMENTA]
funcion Arreglo#agregar [ ref yo, tipo tipo -> indice ]
	adquirir yo
	adquirir tipo
	recibir_parametro yo
	recibir_parametro tipo
	llamar CrearAtributoDinamico yo
		llamar Cadena#Concatenar {en} <yo>#tamaño finargs
		tipo
	finargs
	fijar <yo>#tamaño a llamar Sumar <yo>#tamaño {1} finargs
	liberar yo
	liberar tipo
finfun

[DOCUMENTA
@brief Ordena un arreglo utilizando el bubblesort.
Nota: el ordenamiento ocurre <i>in situ</i>
@arg arr Arreglo a ordenar.
@errors Active
DOCUMENTA]
funcion OrdenamientoDeBurbuja [ arr ]
	devolver NULO
finfun
